//我们将操作中人类与电脑所一致的部分独立出来做成了操作API
//那么不一致的部分呢？对于人类，需要布置好操作所需的UI接口
//而对于电脑，需要做出能够根据不同情形选择的AI。
//布置UI与AI的这个部分对于人类和电脑其实是一一对应的。这个部分同样做出API——操作请求
//这部分API要注意的是对于人类和电脑是不同的，会对应不同的操作
//当一个结算完成后，会先检查剧情进展，随后提出操作请求。如果有剧情进展则在剧情进展末尾进行操作请求。
//要注意，剧情里这种要求你点击对话框进行推进的部分并不属于操作请求，一些是结算的一部分，另一些由另一个维度来控制。

//空闲操作请求：
//当一个完整的操作结算完成后对当前操作者发起一个操作请求
//这个操作请求包括：鼠标划入地图上的格子时，取消已有的敌可达范围显示，且如果当前格子里有一个敌方，会显示敌方的移动可达范围。
//当鼠标点击地图上的格子时，如果仅有一个可操作对象（角色或场景），将进行一次“决策选定角色”或“决策选定场景”操作
//如果有多个可操作对象，将生成一个对话框来决定具体选择哪个对象，然后进行具体操作（待实装）
//而如果点击没有任何可操作对象的格子，则会弹出全局控制板，可以推进下一回合，查看操作帮助、图鉴等操作。
function 空闲操作请求(控制势力标识){
    let 控制势力 = cls.势力.获取实例(控制势力标识);
    //如果控制势力是玩家
    if (控制势力.玩家性) {
        function 空闲鼠标移至其他格子函数(格子){
            //先取消已有的敌可达范围显示
        }
        全局.UI事件分发器.添加监听("鼠标移至其他格子", 空闲鼠标移至其他格子函数);
    }
}