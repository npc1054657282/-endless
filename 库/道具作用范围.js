
//来做一个道具作用范围抽象
function 道具作用范围抽象(){
    var that = this;
	//道具作用范围有多种模板模式的选择UI范式。
	//1.单模板模式，直接进入唯一的模板选项UI
	//2.四方向模板模式，有4个模板，每个模板对应一个方向。攻击者周围四格有方向按钮，按下后进入对应模板选项UI
	//3.四方向单选项模板模式，有4个模板，每个模板对应一个方向，且每个模板内只有一个选项，因此按下方向按钮直接选择该选项，不用进入模板选项UI。
	//4.对话框多模板模式，有多个模板，先弹出对话框选择模板，然后进入对应模板选项
	that.道具作用范围模板选择模式 = "单模板模式";
    that.道具作用范围模板数组 = [];
}
//一个道具作用范围可能有多种模板，例如1*3的攻击和3*1的攻击，选定模式是不一样的
function 道具作用范围模板(){
	var that = this;
	that.攻击中心偏移相对性 = "相对";//有相对和绝对两种选项，表示攻击中心像素偏移是相对攻击者还是整个地图
	that.各攻击中心像素偏移数组 = [];
	//示例:这是一个拥有以周围四格为攻击中心的作用范围
	//[{dx:-32,dy:0},{dx:0,dy:-32},{dx:32,dy:0},{dx:0,dy:32}]
	//实际使用时，获得攻击中心为：
	//for 偏移量 in that.各攻击中心相对攻击者像素偏移数组{
	//	var 攻击中心 = 攻击者.clone().offset(偏移量.dx, 偏移量.dy);
	that.各受攻击格中心相对攻击中心像素偏移数组 = [];
	//示例：这是一个只攻击一个格子，格子就在攻击中心的作用范围
	//[{dx:0,dy:0}]
	that.鼠标选定矩形halfx = 16;
	that.鼠标选定矩形halfy = 16;
	//这个东西以各个攻击中心为中点，从攻击中心-halfx~攻击中心+halfx，攻击中心-halfy~攻击中心+halfy
	//构成一个矩形，如果鼠标落在一个攻击中心构成的矩形内，就认为选中了这片攻击格。
	//原则上不允许各个矩形发生重叠，所以一般点选偏移都取16即矩形在一个格子内。
	//有一些攻击中心非常少，只有几个方位的，可以做一点较大的矩形。
}